{"mappings":"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","sources":["src/shopping.js"],"sourcesContent":["const shopForm = document.querySelector('.shopping');\n\nconst shopList = document.querySelector('.list')\n\n// we need an array that to hold our state\n\nlet items = [];\n\nfunction handleSubmit(e) {\n    e.preventDefault();\n    console.log('Clicked');\n    const name = e.currentTarget.item.value;\n    if(!name) return;\n    const item = {\n        name: name,\n        id: Date.now(),\n        complete: false,\n    }\n    // push the item into our state\n    items.push(item);\n    console.log(`There are now ${items.length} in your state`);\n    // clear form on submit \n    e.target.reset();\n    // e.currentTarget.reset(); //same as above\n    // fire off custom event that will tell anyone else who cares that the items have updated\n    shopList.dispatchEvent(new CustomEvent('itemsUpdated'))\n}\n\nfunction displayItems() {\n    const html = items.map(item => `<li class=\"shopping-item\">\n    <input value='${item.id}' type=\"checkbox\" ${item.complete && 'checked'}/>\n    <span class=\"itemName\">${item.name}</span>\n    <button value='${item.id}' aria-label='Remove ${item.name}'>&times;</button>   \n    </li>`).join('');\n    shopList.innerHTML = html\n}\n\nfunction mirrorToLocalStorage() {\n    localStorage.setItem('items', JSON.stringify(items))\n    // console.info('Saving items to localStorage', localStorage);\n}\n\nfunction restoreFromLocalStorage() {\n    console.log('restoring from LocalStorage');\n    const listItems = JSON.parse(localStorage.getItem('items'))   \n    // console.log(listItems); \n    if(listItems.length) {\n        // listItems.forEach(item => items.push(item));\n        items.push(...listItems);\n        shopList.dispatchEvent(new CustomEvent('itemsUpdated'));\n    }\n}\n\nfunction deleteItem(id) {\n    console.log('DELETE', id);\n    items = items.filter(item => item.id !== id);\n    shopList.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nfunction markComplete(id) {\n    console.log('Complete: ',id);\n    const itemRef = items.find(item => item.id === id);\n    console.log(itemRef);\n    itemRef.complete = !itemRef.complete;\n    shopList.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nshopForm.addEventListener('submit', handleSubmit);\nshopList.addEventListener('itemsUpdated', displayItems);\nshopList.addEventListener('itemsUpdated', mirrorToLocalStorage);\n// Event Delegation: we listen on the click on the list <ul> but then delegate the click over to the button if that is what was click\n// shopList.addEventListener('click', e => e.target.matches('button') ? deleteItem(parseInt(e.target.value)): null);\n\nshopList.addEventListener('click', e => {\n    const id = parseInt(e.target.value)\n    if(e.target.matches('button')){\n        deleteItem(id)\n    }\n    if(e.target.matches('input[type=\"checkbox\"]')){\n        markComplete(id)\n    }\n})\n\nrestoreFromLocalStorage();\n// shopList.addEventListener('itemsUpdated', e => console.log(e));\n"],"names":[],"version":3,"file":"index.37f339a2.js.map","sourceRoot":"/__parcel_source_root/"}