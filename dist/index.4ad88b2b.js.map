{"mappings":"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","sources":["src/textgen.js"],"sourcesContent":["const textArea = document.querySelector('[name=\"text\"]');\nconst result = document.querySelector('.result');\nconst inputFilter = Array.from(document.querySelectorAll('[name=\"filter\"]'));\n\n/* eslint-disable */\nconst funkyLetters = {\n    '-': '₋', '!': 'ᵎ', '?': 'ˀ', '(': '⁽', ')': '₎', '+': '⁺', '=': '₌', '0': '⁰', '1': '₁', '2': '²', '4': '₄', '5': '₅', '6': '₆', '7': '⁷', '8': '⁸', '9': '⁹', a: 'ᵃ', A: 'ᴬ', B: 'ᴮ', b: 'ᵦ', C: '𝒸', d: 'ᵈ', D: 'ᴰ', e: 'ₑ', E: 'ᴱ', f: '𝒻', F: 'ᶠ', g: 'ᵍ', G: 'ᴳ', h: 'ʰ', H: 'ₕ', I: 'ᵢ', i: 'ᵢ', j: 'ʲ', J: 'ᴶ', K: 'ₖ', k: 'ₖ', l: 'ˡ', L: 'ᴸ', m: 'ᵐ', M: 'ₘ', n: 'ₙ', N: 'ᴺ', o: 'ᵒ', O: 'ᴼ', p: 'ᵖ', P: 'ᴾ', Q: 'ᵠ', q: 'ᑫ', r: 'ʳ', R: 'ᵣ', S: 'ˢ', s: 'ˢ', t: 'ᵗ', T: 'ₜ', u: 'ᵘ', U: 'ᵤ', v: 'ᵛ', V: 'ᵥ', w: '𝓌', W: 'ʷ', x: 'ˣ', X: 'ˣ', y: 'y', Y: 'Y', z: '𝓏', Z: 'ᶻ' };\n  /* eslint-enable */\n\n\nfunction transformText(text) {\n    // const filter = document.querySelector('[name=\"filter\"]:checked').value;\n    // Array.from(inputFilter).find(input => input.checked)\n    // const filter = Array.from(inputFilter).find(input => input.checked);\n    const filter = inputFilter.find(input => input.checked).value;\n    \n    // console.log(text);\n    // take text and loop over each letter\n    // const modifiedText = Array.from(text).map(filters.filter) ===> b/c its a varible you need to use [ ] to access it \n    const modifiedText = Array.from(text).map(filters[filter])\n\n    result.textContent = modifiedText.join('');\n}\n\nconst filters = {\n    sarcastic(letter, index) {\n        // if 1 is leftover than the letter is odd and will be uppercased\n        if(index % 2) {\n            return letter.toUpperCase();\n        }else {\n            // if nothing is leftover the letter is even and will be lowercased\n            return letter.toLowerCase();\n        }\n    },\n    funky(letter) {\n        // check if there is a funky letter \n        let funkyLetter = funkyLetters[letter];\n        if (funkyLetter) return funkyLetter;\n        // if there is not check if there is a lowercase version\n        funkyLetter = funkyLetters[letter.toLowerCase()];\n        if (funkyLetter) return funkyLetter;\n        // if there is nothing, return the regular letter\n        return letter\n    },\n    unable(letter) {\n        const random = Math.floor(Math.random() * 3)    \n        if(letter === ' ' && random === 2 ){\n            return '...';\n        }\n        return letter\n    }\n}\n\n\ntextArea.addEventListener('input', e => transformText(e.target.value))\n\ninputFilter.forEach(input => input.addEventListener('input', () => transformText(textArea.value) ))"],"names":[],"version":3,"file":"index.4ad88b2b.js.map","sourceRoot":"/__parcel_source_root/"}